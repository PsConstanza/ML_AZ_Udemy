setwd("C:/Users/Ckonny/Desktop/ML/SecciÃ³n06_ReinforcementLearning/01_Upper Confidence Bound (UCB)")
dataset = read.csv('Ads_CTR_Optimisation.csv')
# Implementing Random Selection
N = 10000
d = 10
ads_selected = integer(0)
total_reward = 0
for (n in 1:N) {
ad = sample(1:10, 1)
ads_selected = append(ads_selected, ad)
reward = dataset[n, ad]
total_reward = total_reward + reward
}
hist(ads_selected,
col = 'blue',
main = 'Histogram of ads selections',
xlab = 'Ads',
ylab = 'Number of times each ad was selected')
# Importar los datos
dataset = read.csv('Ads_CTR_Optimisation.csv')
d = 10 #N sub i
N = 10000 #Total de rondas
number_of_selections = integer(d)
sums_of_rewards = integer(d)
ads_selected = integer()
total_reward = 0
for(n in 1:N){
max_upper_bound = 0
ad = 0
for(i in 1:d){
if(number_of_selections[i]>0){
average_reward = sums_of_rewards[i]/number_of_selections[i]
delta_i = sqrt(3/2*log(n)/number_of_selections(i))
upper_bound = average_reward + delta_i
}else{
upper_bound = 10^400
}
if(upper_bound > max_upper_bound){
max_upper_bound = upper_bound
ad = i
}
}
ads_selected = append(ads_selected, ad)
number_of_selections[ad] = number_of_selections[ad] + 1
reward = dataset[n, ad]
sums_of_rewards[ad] = sums_of_rewards[ad] + reward
total_reward = total_reward + reward
}
d = 10 #N sub i
N = 10000 #Total de rondas
number_of_selections = integer(d)
sums_of_rewards = integer(d)
ads_selected = integer(0)
total_reward = 0
for(n in 1:N){
max_upper_bound = 0
ad = 0
for(i in 1:d){
if(number_of_selections[i]>0){
average_reward = sums_of_rewards[i]/number_of_selections[i]
delta_i = sqrt(3/2*log(n)/number_of_selections(i))
upper_bound = average_reward + delta_i
}else{
upper_bound = 10^400
}
if(upper_bound > max_upper_bound){
max_upper_bound = upper_bound
ad = i
}
}
ads_selected = append(ads_selected, ad)
number_of_selections[ad] = number_of_selections[ad] + 1
reward = dataset[n, ad]
sums_of_rewards[ad] = sums_of_rewards[ad] + reward
total_reward = total_reward + reward
}
d = 10 #N sub i
N = 10000 #Total de rondas
number_of_selections = integer(d)
sums_of_rewards = integer(d)
ads_selected = integer(0)
total_reward = 0
for(n in 1:N){
max_upper_bound = 0
ad = 0
for(i in 1:d){
if(number_of_selections[i]>0){
average_reward = sums_of_rewards[i]/number_of_selections[i]
delta_i = sqrt(3/2*log(n)/number_of_selections[i])
upper_bound = average_reward + delta_i
}else{
upper_bound = 10^400
}
if(upper_bound > max_upper_bound){
max_upper_bound = upper_bound
ad = i
}
}
ads_selected = append(ads_selected, ad)
number_of_selections[ad] = number_of_selections[ad] + 1
reward = dataset[n, ad]
sums_of_rewards[ad] = sums_of_rewards[ad] + reward
total_reward = total_reward + reward
}
hist(ads_selected,
color = 'lightblue',
main = 'Histograma de los Anuncios',
xlab = 'ID del Anuncio',
ylab = 'Frecuencia absoluta de Anuncios')
