setwd("C:/Users/Ckonny/Desktop/ML/SecciÃ³n06_ReinforcementLearning/02_Thompson Sampling")
# Importar los datos
dataset = read.csv('Ads_CTR_Optimisation.csv')
d = 10 #N sub i
N = 10000 #Total de rondas
number_of_rewards_1 = integer(d)
number_of_rewards_0 = integer(d)
ads_selected = integer(0)
total_reward = 0
for(n in 1:N){
max_random = 0
ad = 0
for(i in 1:d){
ramdon_beta = rbeta(n =1 ,
shape1 = number_of_rewards_1[i]+1,
shape2 = number_of_rewards_0[i]+1)
if(random_beta > max_beta){
max_beta = random_beta
ad = i
}
}
ads_selected = append(ads_selected, ad)
reward = dataset[n, ad]
if(reward == 1){
number_of_rewards_1[ad] = number_of_rewards_1[ad] + 1
}else{
number_of_rewards_0[ad] = number_of_rewards_0[ad] + 1
}
total_reward = total_reward + reward
}
d = 10 #N sub i
N = 10000 #Total de rondas
number_of_rewards_1 = integer(d)
number_of_rewards_0 = integer(d)
ads_selected = integer(0)
total_reward = 0
for(n in 1:N){
max_random = 0
ad = 0
for(i in 1:d){
ramdon_beta = rbeta(n =1 ,
shape1 = number_of_rewards_1[i]+1,
shape2 = number_of_rewards_0[i]+1)
if(random_beta > max_random){
max_random = random_beta
ad = i
}
}
ads_selected = append(ads_selected, ad)
reward = dataset[n, ad]
if(reward == 1){
number_of_rewards_1[ad] = number_of_rewards_1[ad] + 1
}else{
number_of_rewards_0[ad] = number_of_rewards_0[ad] + 1
}
total_reward = total_reward + reward
}
d = 10 #N sub i
N = 10000 #Total de rondas
number_of_rewards_1 = integer(d)
number_of_rewards_0 = integer(d)
ads_selected = integer(0)
total_reward = 0
for(n in 1:N){
max_random = 0
ad = 0
for(i in 1:d){
random_beta = rbeta(n =1 ,
shape1 = number_of_rewards_1[i]+1,
shape2 = number_of_rewards_0[i]+1)
if(random_beta > max_random){
max_random = random_beta
ad = i
}
}
ads_selected = append(ads_selected, ad)
reward = dataset[n, ad]
if(reward == 1){
number_of_rewards_1[ad] = number_of_rewards_1[ad] + 1
}else{
number_of_rewards_0[ad] = number_of_rewards_0[ad] + 1
}
total_reward = total_reward + reward
}
# Importar los datos
dataset = read.csv('Ads_CTR_Optimisation.csv')
# Implementar Muestreo Thompson
d = 10 #N sub i
N = 10000 #Total de rondas
number_of_rewards_1 = integer(d)
number_of_rewards_0 = integer(d)
ads_selected = integer(0)
total_reward = 0
for(n in 1:N){
max_random = 0
ad = 0
for(i in 1:d){
random_beta = rbeta(n =1 ,
shape1 = number_of_rewards_1[i]+1,
shape2 = number_of_rewards_0[i]+1)
if(random_beta > max_random){
max_random = random_beta
ad = i
}
}
ads_selected = append(ads_selected, ad)
reward = dataset[n, ad]
if(reward == 1){
number_of_rewards_1[ad] = number_of_rewards_1[ad] + 1
}else{
number_of_rewards_0[ad] = number_of_rewards_0[ad] + 1
}
total_reward = total_reward + reward
}
# Importar los datos
dataset = read.csv('Ads_CTR_Optimisation.csv')
# Implementar Muestreo Thompson
d = 10 #N sub i
N = 10000 #Total de rondas
number_of_rewards_1 = integer(d)
number_of_rewards_0 = integer(d)
ads_selected = integer(0)
total_reward = 0
for(n in 1:N){
max_random = 0
ad = 0
for(i in 1:d){
random_beta = rbeta(n =1 ,
shape1 = number_of_rewards_1[i]+1,
shape2 = number_of_rewards_0[i]+1)
if(random_beta > max_random){
max_random = random_beta
ad = i
}
}
ads_selected = append(ads_selected, ad)
reward = dataset[n, ad]
if(reward == 1){
number_of_rewards_1[ad] = number_of_rewards_1[ad] + 1
}else{
number_of_rewards_0[ad] = number_of_rewards_0[ad] + 1
}
total_reward = total_reward + reward
}
hist(ads_selected,
color = 'lightblue',
main = 'Histograma de los Anuncios',
xlab = 'ID del Anuncio',
ylab = 'Frecuencia absoluta de Anuncios')
ads_selected[5]
ads_selected
